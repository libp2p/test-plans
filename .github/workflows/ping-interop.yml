on:
  workflow_dispatch:
    inputs:
      testground_endpoint:
        type: string
        required: false
        description: testground endpoint
      custom_git_reference:
        description: the git commit or branch we're going to use for the custom target
        required: false
        type: string
      custom_git_target:
        description: the custom git fork url we're going to use for the custom target (github.com/some-fork/rust-libp2p)
        required: false
        type: string
      custom_interop_target:
        description: in the case of cross-implementation testing, the implementation target (go | rust | nim)
        required: false
        type: string
  push:
  pull_request:

name: libp2p ping - go, rust and nim test (all) with testground.

jobs:
  run-ping-latest:
    uses: "./.github/workflows/run-composition.yml"
    with:
      composition_file: "ping/_compositions/all-interop-latest.toml"
      custom_git_target: ${{ github.event.inputs.custom_git_target }} # nothing or "some-fork/go-libp2p"
      custom_git_reference: ${{ github.event.inputs.custom_git_reference }} # a git reference
      custom_interop_target: ${{ github.event.inputs.custom_interop_target }} # go | rust | nim
      testground_endpoint: ${{ github.event.inputs.testground_endpoint }}
      test_repository: ${{ (github.event.inputs && '') || github.repository }}
      test_ref: ${{ (github.event.inputs && '') || github.event.pull_request.head.sha || github.sha }}
  run-ping-all:
    uses: "./.github/workflows/run-composition.yml"
    with:
      composition_file: "ping/_compositions/all-interop.toml"
      custom_git_target: ${{ github.event.inputs.custom_git_target }} # nothing or "some-fork/go-libp2p"
      custom_git_reference: ${{ github.event.inputs.custom_git_reference }} # a git reference
      custom_interop_target: ${{ github.event.inputs.custom_interop_target }} # go | rust | nim
      testground_endpoint: ${{ github.event.inputs.testground_endpoint }}
      test_repository: ${{ (github.event.inputs && '') || github.repository }}
      test_ref: ${{ (github.event.inputs && '') || github.event.pull_request.head.sha || github.sha }}
