name: Add new implementation versions

on:
  workflow_dispatch:
  schedule:
    # “At minute 36 past every 24th hour.” - https://crontab.guru/#36_*/24_*_*_*
    - cron:  '36 */24 * * *'

defaults:
  run:
    shell: bash

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  add:
    name: Add (${{ matrix.branch }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - branch: perf/go-libp2p
            workflow: perf.yml
            script: |
              pushd perf/impl/go-libp2p
                cp -r $LOCAL_MAJOR_MINOR_VERSION $REMOTE_MAJOR_MINOR_VERSION
                pushd $REMOTE_MAJOR_MINOR_VERSION
                  sed -i "1s/$LOCAL_MAJOR_MINOR_VERSION/$REMOTE_MAJOR_MINOR_VERSION/g" go.mod

                  go mod tidy -go=$GO_MAJOR_MINOR_VERSION
                  go mod tidy

                  go get github.com/libp2p/go-libp2p@$REMOTE_VERSION
                popd

                git add .
                git commit -m "chore: add go-libp2p@$REMOTE_VERSION to $(pwd)"
              popd

              pushd perf/runner
                versions="$(jq '. + map(select(.implementation == "go-libp2p" and .id == env.LOCAL_MAJOR_MINOR_VERSION) | .id = env.REMOTE_MAJOR_MINOR_VERSION)' versions.json)"
                echo "$versions" > versions.json

                git add versions.json
                git commit -m "chore: add go-libp2p@$REMOTE_VERSION to versions.json"
              popd
          - branch: transport-interop/go-libp2p
            workflow: transport-interop.yml
            script: |
              pushd transport-interop/impl/go
                cp -r $LOCAL_MAJOR_MINOR_VERSION $REMOTE_MAJOR_MINOR_VERSION
                pushd $REMOTE_MAJOR_MINOR_VERSION
                  sed -i "s/image_name := go-v$LOCAL_MAJOR_MINOR_VERSION/image_name := go-$REMOTE_MAJOR_MINOR_VERSION/g" Makefile
                  sed -i "s/version := $LOCAL_VERSION\..*/version := ${REMOTE_VERSION#v}/g" Makefile

                  make version.lock
                popd

                git add .
                git commit -m "chore: add go-libp2p@$REMOTE_VERSION to $(pwd)"
              popd

              pushd transport-interop
                versions="$(jq '. + map(select(.id == "go-\(env.LOCAL_MAJOR_MINOR_VERSION)") | .id = "go-\(env.MAJOR_MINOR_REMOTE_VERSION)")' versions.json)"
                echo "$versions" > versions.json

                git add versions.json
                git commit -m "chore: add go-libp2p@$REMOTE_VERSION to versions.json"
              popd
    env:
      BRANCH: ${{ matrix.branch }}
      WORKFLOW: ${{ github.workflow }}
    steps:
      - name: Checkout test-plans
        uses: actions/checkout@v4
      - name: Configure git
        run: |
          git fetch origin $BRANCH && git checkout $BRANCH || git checkout -b $BRANCH
          git rebase $GITHUB_REF -X theirs || git rebase --abort
          git config --global user.email $GITHUB_ACTOR@users.noreply.github.com
          git config --global user.name $GITHUB_ACTOR
      - id: go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Get the latest version (local)
        id: local
        run: ls -d v* | sort -V | tail -n-1 | xargs -I{} echo "version={}" | tee -a $GITHUB_OUTPUT
        working-directory: perf/impl/go-libp2p
      - name: Get the latest version (remote)
        id: remote
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh api repos/libp2p/go-libp2p/releases/latest --jq '.tag_name' | xargs -I{} echo "version={}" | tee -a $GITHUB_OUTPUT
      - id: mm
        env:
          REMOTE_VERSION: ${{ steps.remote.outputs.version }}
          GO_VERSION: ${{ steps.go.outputs.go-version }}
        run: |
          echo $REMOTE_VERSION | sed 's/\.[0-9]*$//' | xargs -I{} echo "remote={}" | tee -a $GITHUB_OUTPUT
          echo $GO_VERSION | sed 's/\.[0-9]*$//' | xargs -I{} echo "go={}" | tee -a $GITHUB_OUTPUT
      - name: Add the latest version
        if: ${{ !startsWith(steps.remote.outputs.version, steps.local.outputs.version) }}
        env:
          LOCAL_MAJOR_MINOR_VERSION: ${{ steps.local.outputs.version }}
          REMOTE_VERSION: ${{ steps.remote.outputs.version }}
          REMOTE_MAJOR_MINOR_VERSION: ${{ steps.mm.outputs.remote }}
          GO_VERSION: ${{ steps.go.outputs.go-version }}
          GO_MAJOR_MINOR_VERSION: ${{ steps.mm.outputs.go }}
        run: ${{ matrix.script }}
      - run: |
          # create a PR if an open one doesn't exist yet
          if [[ $(gh pr list --state open --base $GITHUB_REF --head $BRANCH | wc -l) -eq 0 ]]; then
            gh pr create --title "chore: add go-libp2p@$REMOTE_VERSION for $WORKFLOW" --body "This PR adds go-libp2p@$REMOTE_VERSION for $WORKFLOW" --head $BRANCH --base $GITHUB_REF
          fi
          gh workflow run $WORKFLOW --ref $BRANCH
