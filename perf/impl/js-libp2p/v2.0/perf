#!/bin/bash

# In case this script is `kill`ed, `kill` its child process, namely the `node`
# process below.
cleanup() {
    kill $node_pid
}
trap cleanup EXIT TERM

# Find the path to the Node.js executable
node_path=$(which node)

run_server=false
server_address=""
server_multiaddr=""
upload_bytes=0
download_bytes=0
transport="tcp"
encryption="noise"

# Parse named parameters manually
for ((i = 1; i <= $#; i++)); do
    if [ "${!i}" == "--server-address" ]; then
        server_address="${@:i+1:1}"
    fi
    if [ "${!i}" == "--server-multiaddr" ]; then
        server_multiaddr="${@:i+1:1}"
    fi
    if [ "${!i}" == "--upload-bytes" ] && [ -n "${@:i+1:1}" ]; then
        upload_bytes="${@:i+1:1}"
    fi
    if [ "${!i}" == "--download-bytes" ] && [ -n "${@:i+1:1}" ]; then
        download_bytes="${@:i+1:1}"
    fi
    if [ "${!i}" == "--transport" ] && [ -n "${@:i+1:1}" ]; then
        transport="${@:i+1:1}"
    fi
    if [ "${!i}" == "--encryption" ] && [ -n "${@:i+1:1}" ]; then
        encryption="${@:i+1:1}"
    fi
    if [ "${!i}" == "--run-server" ]; then
        run_server=true
    fi
done

# Run perf
node $(dirname "$0")/index.js --run-server=$run_server --server-address=$server_address --server-multiaddr=$server_multiaddr --upload-bytes=$upload_bytes --download-bytes=$download_bytes --transport=$transport --encryption=$encryption &

node_pid=$!

# Wait for `node_pid` to finish, or for it to be `kill`ed by the above
# `cleanup`.
wait $node_pid
